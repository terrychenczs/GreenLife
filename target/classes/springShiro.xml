<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/util  
        http://www.springframework.org/schema/util/spring-util-3.0.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/jee   
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"  
    default-lazy-init="false">  
    <!-- 缓存管理器使用Ehcache实现 -->  
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />  
    </bean>  
    <!-- 凭证匹配器 -->  
    <bean id="credentialsMatcher" class="com.czs.credentials.RetryLimitHashedCredentialsMatcher">  
        <constructor-arg ref="cacheManager" />  
        <property name="hashAlgorithmName" value="md5" />  
        <property name="hashIterations" value="2" />  
        <property name="storedCredentialsHexEncoded" value="true" />  
    </bean>  
    <!-- Realm实现 -->  
    <bean id="userRealm" class="com.czs.realm.UserRealm">  
        <!--<property name="userService" ref="userService" />  -->
        <property name="credentialsMatcher" ref="credentialsMatcher" />  
        <property name="cachingEnabled" value="true" />  
        <property name="authenticationCachingEnabled" value="true" />  
        <property name="authenticationCacheName" value="authenticationCache" />  
        <property name="authorizationCachingEnabled" value="true" />  
        <property name="authorizationCacheName" value="authorizationCache" />  
    </bean>  
    <!-- 会话ID 生成器 -->  
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
    <!-- 会话DAO -->  
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />  
        <property name="sessionIdGenerator" ref="sessionIdGenerator" />  
    </bean>  
    <!-- 会话验证调度器 sessionValidationInterval：设置调度时间间隔 -->  
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="18000000" />  
        <property name="sessionManager" ref="sessionManager" />  
    </bean>
    <!-- 会话Cookie 模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid" />
        <property name="httpOnly" value="true" />
        <property name="maxAge" value="1800" />
        <property name="name" value="shiro.session"/>
    </bean>
    <!-- 记住密码cookie -->  
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe" />  
        <property name="httpOnly" value="true" />  
        <property name="maxAge" value="2592000" /><!-- 30天 30*24*60*60 -->  
    </bean>  
    <!-- rememberMe管理器，cipherKey是加密rememberMe Cookie的密钥；默认AES算 -->  
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
        <property name="cookie" ref="rememberMeCookie" />  
    </bean>  
    <!-- 会话管理器 globalSessionTimeout：设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期 sessionValidationSchedulerEnabled：是否开启会话验证器，默认是开启的 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="18000000" />  
        <property name="deleteInvalidSessions" value="true" />  
        <property name="sessionValidationSchedulerEnabled" value="true" />  
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler" />  
        <property name="sessionDAO" ref="sessionDAO" />  
        <property name="sessionIdCookieEnabled" value="true" />  
        <property name="sessionIdCookie" ref="sessionIdCookie" />  
        <property name="sessionListeners" ref="sessionListener1" />
    </bean>

    <!-- 监听会话 -->  
    <bean id="sessionListener1" class="com.czs.util.MySessionListener1"></bean>  
    <!-- 安全管理器 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="userRealm" />  
        <property name="sessionManager" ref="sessionManager" />  
        <property name="cacheManager" ref="cacheManager" />  
        <property name="rememberMeManager" ref="rememberMeManager" />  
    </bean>  
    <!-- kickoutSessionControlFilter 用于控制并发登录人数的 -->  
    <bean id="kickoutSessionControlFilter" class="com.czs.util.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager" />  
        <property name="sessionManager" ref="sessionManager" />  
        <property name="kickoutAfter" value="false" />  
        <property name="maxSession" value="1" />
        <property name="kickoutUrl" value="/login?kickout=1" />
    </bean>  
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />  
    </bean>  
    <!-- Shiro 生命周期处理器 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!--rememberMeParam，即rememberMe请求参数名，请求参数是boolean类型，true表示rememberMe。-->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username" />  
        <property name="passwordParam" value="password" />  
        <property name="rememberMeParam" value="rememberMe" />  
        <property name="loginUrl" value="/login" />  
    </bean>  
    <!-- Shiro 的Web过滤器 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager" />  
        <property name="loginUrl" value="/login" />  
        <!--<property name="successUrl" value="/index" />-->
        <property name="unauthorizedUrl" value="/unauthorized" />  
        <property name="filters">  
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter" />  
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>  
            </map>
        </property>  
        <property name="filterChainDefinitions">  
            <value>  
                /static/** = anon
                /unauthorized = anon  
                /login = anon
                /logout = logout  
                <!--/admin/**= user-->
                /admin/index = kickout,authc,roles[ordinary]
                /admin/dataAjax = authc,roles[ordinary]

            </value>  
        </property>  
    </bean>  
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">   
	    <property name="exceptionMappings">   
	        <props>   
	            <prop key="org.apache.shiro.authz.UnauthorizedException">   
	                /unauthorized   
	            </prop>   
	            <prop key="org.apache.shiro.authz.UnauthenticatedException">   
	                /login 
	            </prop>   
	        </props>   
	    </property>   
	</bean>  
</beans>  